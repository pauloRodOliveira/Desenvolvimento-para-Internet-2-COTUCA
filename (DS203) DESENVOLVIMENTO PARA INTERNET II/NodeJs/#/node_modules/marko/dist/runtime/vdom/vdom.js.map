{"version":3,"sources":["../../../src/runtime/vdom/vdom.js"],"names":["VNode","require","VDocumentFragment","VElement","VText","VComponent","VFragment","parseHTML","specialHtmlRegexp","virtualizeChildNodes","node","vdomParent","ownerComponent","curChild","firstChild","virtualize","nextSibling","nodeType","nodeValue","vdomDocFragment","virtualizeHTML","html","test","vdomFragment","Node_prototype","prototype","t","value","type","vdomNode","toHTML","toString","exports"],"mappings":"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","sourcesContent":["var VNode = require(\"./VNode\");\nvar VDocumentFragment = require(\"./VDocumentFragment\");\nvar VElement = require(\"./VElement\");\nvar VText = require(\"./VText\");\nvar VComponent = require(\"./VComponent\");\nvar VFragment = require(\"./VFragment\");\nvar parseHTML = require(\"./parse-html\");\n\nvar specialHtmlRegexp = /[&<]/;\n\nfunction virtualizeChildNodes(node, vdomParent, ownerComponent) {\n  var curChild = node.firstChild;\n  while (curChild) {\n    vdomParent.___appendChild(virtualize(curChild, ownerComponent));\n    curChild = curChild.nextSibling;\n  }\n}\n\nfunction virtualize(node, ownerComponent) {\n  switch (node.nodeType) {\n    case 1:\n      return VElement.___virtualize(node, virtualizeChildNodes, ownerComponent);\n    case 3:\n      return new VText(node.nodeValue, ownerComponent);\n    case 11:\n      var vdomDocFragment = new VDocumentFragment();\n      virtualizeChildNodes(node, vdomDocFragment, ownerComponent);\n      return vdomDocFragment;\n  }\n}\n\nfunction virtualizeHTML(html, ownerComponent) {\n  if (!specialHtmlRegexp.test(html)) {\n    return new VText(html, ownerComponent);\n  }\n\n  var vdomFragment = new VDocumentFragment();\n  var curChild = parseHTML(html);\n\n  while (curChild) {\n    vdomFragment.___appendChild(virtualize(curChild, ownerComponent));\n    curChild = curChild.nextSibling;\n  }\n\n  return vdomFragment;\n}\n\nvar Node_prototype = VNode.prototype;\n\n/**\n * Shorthand method for creating and appending a Text node with a given value\n * @param  {String} value The text value for the new Text node\n */\nNode_prototype.t = function (value) {\n  var type = typeof value;\n  var vdomNode;\n\n  if (type !== \"string\") {\n    if (value == null) {\n      value = \"\";\n    } else if (type === \"object\") {\n      if (value.toHTML) {\n        vdomNode = virtualizeHTML(value.toHTML());\n      }\n    }\n  }\n\n  this.___appendChild(vdomNode || new VText(value.toString()));\n  return this.___finishChild();\n};\n\nNode_prototype.___appendDocumentFragment = function () {\n  return this.___appendChild(new VDocumentFragment());\n};\n\nexports.___VDocumentFragment = VDocumentFragment;\nexports.___VElement = VElement;\nexports.___VText = VText;\nexports.___VComponent = VComponent;\nexports.___VFragment = VFragment;\nexports.___virtualize = virtualize;\nexports.___virtualizeHTML = virtualizeHTML;\n"],"file":"vdom.js"}